name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    name: Build (Node.js v${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 22
          - 23

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}.x
          cache: npm

      - name: Install dependencies
        run: npm clean-install

      - name: Run Build
        run: npm run build

      - name: Audit, fix outdated dependencies and rebuild
        run: |
          npm list --outdated
          npm audit || true
          npm audit fix || true
          npm list --outdated
          npm run build

  test:
    name: Test and report coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: npm

      - name: Install dependencies
        run: npm clean-install

      - name: Run Lint
        run: npm run lint

      - name: Run Test with coverage
        run: npm run test:coverage

      - name: Codacy coverage report
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage/lcov.info

  trigger-docs:
    if: github.ref == 'refs/heads/main'
    name: Trigger Docs workflow
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    permissions:
      contents: write
    steps:
      - name: Create docs repository dispatch event
        env:
          GH_TOKEN: ${{ github.token }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/dispatches \
            -f "event_type=docs" \
            -F "client_payload[commit_message]=$COMMIT_MESSAGE"

  trigger-release:
    if: github.ref == 'refs/heads/main'
    name: Trigger Release workflow
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    permissions:
      contents: write
    steps:
      - name: Create semantic-release repository dispatch event
        env:
          GH_TOKEN: ${{ github.token }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/dispatches \
            -f "event_type=semantic-release" \
            -F "client_payload[commit_message]=$COMMIT_MESSAGE"
